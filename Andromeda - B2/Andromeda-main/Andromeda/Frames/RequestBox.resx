<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xmfuAAAAAElFTkSuQmCC
</value>
  </data>
</root>